# Copyright (c) 2020 Huawei Technologies Co., Ltd.
# Licensed under CC BY-NC-SA 4.0 (Attribution-NonCommercial-ShareAlike 4.0 International) (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode
#
# The code is released for academic research use only. For commercial use, please contact Huawei Technologies Co., Ltd.
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This file contains content licensed by https://github.com/xinntao/BasicSR/blob/master/LICENSE/LICENSE

#### general settings
name: train_SRFlow_UCLA_k2_d10_to_k2
use_tb_logger: true
model: SRFlow
distortion: sr
scale: 1
gpu_ids: [ 0 ]

#### datasets
datasets:
  train:
    name: UCLA_tr
    mode: LRHR_PKL
    dataroot_GT: /datasets/UCLA/png/k2_d100_st1.0/pkls/k2_d100_st1.0_train.pklv4
    dataroot_LQ: /datasets/UCLA/png/k2_d10_st1.0/pkls/k2_d10_st1.0_train.pklv4
    quant: 32

    use_shuffle: true
    n_workers: 8  # per GPU
    batch_size: 16
    GT_size: 128
    use_flip: true
    use_crop: true
    color: RGB
  val:
    name: UCLA_val
    mode: LRHR_PKL
    dataroot_GT: /datasets/UCLA/png/k2_d100_st1.0/pkls/k2_d100_st1.0_val.pklv4
    dataroot_LQ: /datasets/UCLA/png/k2_d10_st1.0/pkls/k2_d10_st1.0_val.pklv4
    quant: 32
    save_img: true
    n_max: 250

#### Test Settings
dataroot_GT: /dingo/data/leihaowei/nastaran_test_h5_png/k2_d100_st1.0
dataroot_LR: /dingo/data/leihaowei/nastaran_test_h5_png/k2_d10_st1.0
# dataroot_LR: /dingo/data/leihaowei/nastaran_test_h5_png/k2_d10_st1.0
result_path: /dingo/data/leihaowei/CTFlow/UCLA
model_path: ../experiments/train_SRFlow_UCLA_k2_d10_to_k2/models/100000_G.pth
heat: 0.8 # This is the standard deviation of the latent vectors

#### network structures
network_G:
  which_model_G: SRFlowNet
  in_nc: 1
  out_nc: 1
  nf: 64
  nb: 14
  train_RRDB: false
  train_RRDB_delay: 0.5

  flow:
    K: 16
    L: 3
    noInitialInj: true
    coupling: CondAffineSeparatedAndCond
    additionalFlowNoAffine: 2
    split:
      enable: true
      correct_splits: true
    fea_up0: true
    fea_up-1: true
    fea_up-2: true
    stackRRDB:
      blocks: [ 1, 5, 9, 13]
      concat: true


#### path
path:
  pretrain_model_G: ../experiments/train_RRDB_UCLA_k2_d10_to_k2_nb14/models/300000_G.pth
  strict_load: true
  resume_state: auto

#### training settings: learning rate scheme, loss
train:
  manual_seed: 10
  lr_G: !!float 1e-4
  weight_decay_G: 0
  beta1: 0.9
  beta2: 0.99
  lr_scheme: MultiStepLR
  warmup_iter: -1  # no warm up
  lr_steps_rel: [ 0.5, 0.75, 0.9, 0.95 ]
  lr_gamma: 0.5

  niter: 100000
  val_freq: 10000

#### validation settings
val:
  heats: [ 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ]
  n_sample: 1

#### logger
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 10e3

# Copyright (c) 2020 Huawei Technologies Co., Ltd.
# Licensed under CC BY-NC-SA 4.0 (Attribution-NonCommercial-ShareAlike 4.0 International) (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode
#
# The code is released for academic research use only. For commercial use, please contact Huawei Technologies Co., Ltd.
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This file contains content licensed by https://github.com/xinntao/BasicSR/blob/master/LICENSE/LICENSE

#### general settings
name: train_RRDB_AAPM
use_tb_logger: true
model: SR
distortion: sr
scale: 1
gpu_ids: [7]

#### datasets
datasets:
  train:
    name: AAPM_tr
    mode: LRHR_PKL
    dataroot_GT: /datasets/AAPM/full/pkls/full_train.pklv4
    dataroot_LQ: /datasets/AAPM/low/pkls/low_train.pklv4
    quant: 32

    use_shuffle: true
    n_workers: 8  # per GPU
    batch_size: 16
    GT_size: 128
    use_flip: true
    # use_crop: true
    color: RGB
  val:
    name: AAPM_val
    mode: LRHR_PKL
    dataroot_GT: /datasets/AAPM/full/pkls/full_val.pklv4
    dataroot_LQ: /datasets/AAPM/low/pkls/low_val.pklv4
    quant: 32
    save_img: false
    n_max: 500

#### Test Settings
dataroot_GT:  /datasets/AAPM/full/val
dataroot_LR: /datasets/AAPM/low/val
result_path: /dingo/data/leihaowei/CTFlow/AAPM
model_path: ../experiments/train_RRDB_AAPM/models/60000_G.pth
heat: 0.0

#### network structures
network_G:
  which_model_G: RRDBNet
  use_orig: True
  in_nc: 1
  out_nc: 1
  nf: 64
  nb: 14

#### path
path:
  pretrain_model_G: ~
  strict_load: true
  resume_state: auto

#### training settings: learning rate scheme, loss
train:
  lr_G: !!float 2e-4
  lr_scheme: CosineAnnealingLR_Restart
  beta1: 0.9
  beta2: 0.99
  # niter: 1000000
  niter: 60000
  warmup_iter: -1  # no warm up
  T_period: [ 10000, 10000, 10000, 10000, 20000]
  restarts: [ 10000, 20000, 30000, 40000]
  restart_weights: [ 1, 1, 1, 1,]
  eta_min: !!float 1e-7

  pixel_criterion: l1
  pixel_weight: 1.0

  manual_seed: 10
  val_freq: !!float 10e3

#### logger
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 10e3
